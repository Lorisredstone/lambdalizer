(lambda : (lambda f, *args: f(f, *args[:-1]))((lambda f, cmpt, insts, stack, var_dict : {"RETURN_VALUE" : (lambda f, cmpt, insts, stack, var_dict : [stack.pop(-1), stack, var_dict]),"RESUME" : (lambda f, cmpt, insts, stack, var_dict : f(*[f, cmpt+1, insts, stack, var_dict])),"LOAD_CONST" : (lambda f, cmpt, insts, stack, var_dict : f(*[f, cmpt+1, insts, stack + [insts[cmpt][3]], var_dict])),"STORE_NAME" : (lambda f, cmpt, insts, stack, var_dict : f(*[f, cmpt+1, insts, stack, [var_dict.update({insts[cmpt][3]:stack.pop(-1)}), var_dict][1]])),"BUILD_LIST" : (lambda f, cmpt, insts, stack, var_dict : f(*[f, cmpt+1, insts, stack[0:len(stack)-insts[cmpt][3]] + [stack[len(stack)-insts[cmpt][3]:]], var_dict])),"LOAD_NAME" : (lambda f, cmpt, insts, stack, var_dict : f(*[f, cmpt+1, insts, stack+[var_dict[insts[cmpt][3]]], var_dict])),"NOP" : (lambda f, cmpt, insts, stack, var_dict : f(*[f, cmpt+1, insts, stack, var_dict])),"POP_TOP" : (lambda f, cmpt, insts, stack, var_dict : f(*[f, cmpt+1, insts, stack[:-1], var_dict])),"PUSH_NULL" : (lambda f, cmpt, insts, stack, var_dict : f(*[f, cmpt+1, insts, stack + [None], var_dict])),"PRECALL" : (lambda f, cmpt, insts, stack, var_dict : f(*[f, cmpt+1, insts, stack, var_dict])),"CALL" : (lambda f, cmpt, insts, stack, var_dict : f(*[f, cmpt+1, insts,stack[:len(stack)-insts[cmpt][2]-2] + [(stack[len(stack)-insts[cmpt][2]-1](*stack[len(stack)-insts[cmpt][2]:]))], var_dict])),}.get(insts[cmpt][0], (lambda  f, cmpt, insts, stack, var_dict : print(f"Error : unknown instruction {insts[cmpt]}")))(f, cmpt, insts, stack, var_dict)), 0, [("RESUME", 151, 0, 0, "", 0, 0, False),("PUSH_NULL", 2, None, None, "", 2, 1, False),("LOAD_NAME", 101, 0, "f", "f", 4, None, False),("LOAD_CONST", 100, 0, 0, "0", 6, None, False),("PRECALL", 166, 1, 1, "", 8, None, False),("CALL", 171, 1, 1, "", 12, None, False),("RETURN_VALUE", 83, None, None, "", 22, None, False)], [], {"f":lambda x : str((lambda f, *args: f(f, *args[:-1]))(lambda f, nb, total : f(f, nb-1, total * nb) if nb != 1 else total, x, 1, __import__("sys").setrecursionlimit(2**31-1))).strip("0")[-4:]}, __import__("sys").setrecursionlimit(2**31-1)))()